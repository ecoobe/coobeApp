events {
    worker_connections 1024;
}

http {
    # Основные upstream
    upstream backend {
        server backend;
    }

    upstream frontend {
        server frontend;
    }

    upstream prometheus {
        server prometheus;
    }

    upstream grafana {
        server grafana;
    }

    upstream node_exporter {
        server node-exporter;
    }

    # HTTP → HTTPS редирект для всех доменов
    server {
        listen 80;
        server_name coobe.ru www.coobe.ru prometheus.coobe.ru grafana.coobe.ru node-exporter.coobe.ru;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Основной сайт - coobe.ru
    server {
        listen 443 ssl;
        server_name coobe.ru www.coobe.ru;

        ssl_certificate /etc/letsencrypt/live/coobe.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/coobe.ru/privkey.pem;

        # API routes
        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Добавим поддержку CORS если нужно
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

           # Обработка preflight запросов
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Prometheus
    server {
        listen 443 ssl;
        server_name prometheus.coobe.ru;

        ssl_certificate /etc/letsencrypt/live/coobe.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/coobe.ru/privkey.pem;

        location / {
            proxy_pass http://prometheus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Grafana
    server {
        listen 443 ssl;
        server_name grafana.coobe.ru;

        ssl_certificate /etc/letsencrypt/live/coobe.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/coobe.ru/privkey.pem;

        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Node Exporter
    server {
        listen 443 ssl;
        server_name node-exporter.coobe.ru;

        ssl_certificate /etc/letsencrypt/live/coobe.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/coobe.ru/privkey.pem;

        location / {
            proxy_pass http://node_exporter;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}